plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'java'
}

group = 'net.ionayuahoku'
version = '0.0.1'
archivesBaseName = 'ashes_and_scales'

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

minecraft {
    version '1.19.2-43.2.10' // Убедитесь, что версия Forge правильно указана
    mappings channel: 'official', version: '1.19.2'

    runs {
        client {
            workingDirectory project.file('run')

            // Логирование
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'AshesAndScales'

            mods {
                AshesAndScales {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            source(sourceSets.main)

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'AshesAndScales'

            mods {
                AshesAndScales {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenCentral()
    maven { url 'https://maven.minecraftforge.net' }  // Репозиторий для Forge
    maven { url 'https://jitpack.io' } // Репозиторий для Registrate и других зависимостей с GitHub
}

dependencies {
    // Зависимость для проекта на GitHub (пример)
    implementation 'com.github.Username:Repo:Version'  // Используйте реальное имя пользователя и репозитория
    // Например:
    // implementation 'com.github.Tterrag.registrate:Registrate:MC1.19.2-1.5.0'
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "AshesAndScales",
                "Specification-Vendor"    : "AshesAndScalesVendor",
                "Specification-Version"   : "1", // Версия мода
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "AshesAndScalesVendor",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8' // Использовать кодировку UTF-8 для компиляции Java
    }
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}
